// SCRIPT DE VERIFICACI√ìN FINAL DEL TABLERO
// Ejecutar en la consola del navegador (F12 -> Console)

console.log("üîç INICIANDO VERIFICACI√ìN COMPLETA DEL TABLERO...");
console.log("================================================");

// 1. Verificar si estamos en la aplicaci√≥n correcta
console.log("\n1Ô∏è‚É£ Verificando contexto de la aplicaci√≥n:");
console.log("URL actual:", window.location.href);
console.log("Dominio:", window.location.hostname);
console.log("Puerto:", window.location.port);

// 2. Verificar elementos del men√∫
console.log("\n2Ô∏è‚É£ Buscando elementos del men√∫:");
const menuElements = document.querySelectorAll('[class*="menu"], [class*="nav"], [class*="sidebar"], a, button, .p-menuitem');
let tableroMenuFound = false;

menuElements.forEach((element, index) => {
    const text = element.textContent || element.innerText || '';
    if (text.toLowerCase().includes('tablero')) {
        console.log(`‚úÖ TABLERO ENCONTRADO EN MEN√ö ${index + 1}:`, element);
        console.log("   Texto:", text);
        console.log("   Clase:", element.className);
        console.log("   Href:", element.href || 'No aplica');
        tableroMenuFound = true;
    }
});

if (!tableroMenuFound) {
    console.log("‚ùå No se encontr√≥ 'Tablero' en elementos del men√∫ visible");
    console.log("üîç Elementos de men√∫ encontrados:");
    const menuTexts = Array.from(menuElements)
        .map(el => el.textContent?.trim())
        .filter(text => text && text.length > 0)
        .slice(0, 20); // Mostrar solo los primeros 20
    console.log(menuTexts);
}

// 3. Intentar navegaci√≥n directa
console.log("\n3Ô∏è‚É£ Probando navegaci√≥n directa al tablero:");
const currentPath = window.location.pathname;
console.log("Ruta actual:", currentPath);

if (currentPath === '/tablero/board') {
    console.log("‚úÖ YA EST√ÅS EN EL TABLERO!");
    console.log("üéØ Si no ves contenido, es un problema de renderizado");
} else {
    console.log("üìç Intentando navegar al tablero...");
    
    // Funci√≥n para navegar
    window.goToTablero = function() {
        console.log("üöÄ Navegando a /tablero/board...");
        window.location.href = '/tablero/board';
    };
    
    console.log("üí° Ejecuta: goToTablero() para ir al tablero");
}

// 4. Verificar componentes React
console.log("\n4Ô∏è‚É£ Verificando componentes React:");
const reactRoot = document.querySelector('#root');
if (reactRoot) {
    console.log("‚úÖ Root de React encontrado");
    const reactFiberKey = Object.keys(reactRoot).find(key => 
        key.startsWith('__reactInternalInstance') || key.startsWith('_reactInternalFiber')
    );
    
    if (reactFiberKey) {
        console.log("‚úÖ React Fiber detectado");
    }
} else {
    console.log("‚ùå No se encontr√≥ el root de React");
}

// 5. Verificar errores en consola
console.log("\n5Ô∏è‚É£ Estado de la consola:");
const errors = document.querySelectorAll('.console-error, [class*="error"]');
if (errors.length > 0) {
    console.log("‚ö†Ô∏è Se encontraron", errors.length, "elementos de error");
} else {
    console.log("‚úÖ No se detectaron errores visibles");
}

// 6. Instrucciones finales
console.log("\nüìã INSTRUCCIONES FINALES:");
console.log("========================");
console.log("1. Si NO ves el men√∫ 'Tablero': Limpia la cach√© del navegador");
console.log("2. Si ves el men√∫ pero no funciona: Revisa la consola por errores");
console.log("3. Si quieres ir directamente: Ejecuta goToTablero()");
console.log("4. Si nada funciona: Usa modo inc√≥gnito (Ctrl+Shift+N)");

console.log("\nüéØ RESULTADO DE LA VERIFICACI√ìN:");
if (tableroMenuFound) {
    console.log("‚úÖ TABLERO ENCONTRADO EN EL MEN√ö - Haz clic en √©l");
} else if (currentPath === '/tablero/board') {
    console.log("‚úÖ YA EST√ÅS EN EL TABLERO - Deber√≠a estar visible");
} else {
    console.log("‚ùå TABLERO NO VISIBLE - Intenta limpiar cach√© o modo inc√≥gnito");
}

console.log("================================================");
console.log("üöÄ Verificaci√≥n completada. ¬°Revisa los resultados arriba!");
