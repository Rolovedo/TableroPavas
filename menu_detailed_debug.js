// SCRIPT DE DEBUGGING ESPEC√çFICO PARA EL MEN√ö
// Ejecutar despu√©s del login cuando ya veas "Tablero" en el men√∫

console.log("üîß DEBUGGING ESPEC√çFICO DEL MEN√ö DEL TABLERO...");
console.log("===============================================");

// 1. Interceptar React Router
console.log("\n1Ô∏è‚É£ Configurando interceptaci√≥n de React Router...");
const originalPushState = window.history.pushState;
window.history.pushState = function(state, title, url) {
    console.log("üîÑ Navegaci√≥n interceptada:", url);
    return originalPushState.apply(this, arguments);
};

// 2. Buscar todos los NavLinks
console.log("\n2Ô∏è‚É£ Analizando NavLinks...");
const navLinks = document.querySelectorAll('a[href*="tablero"]');
console.log("NavLinks del tablero encontrados:", navLinks.length);

navLinks.forEach((link, index) => {
    console.log(`NavLink ${index + 1}:`, {
        href: link.href,
        text: link.textContent.trim(),
        classes: link.className,
        onclick: link.onclick ? 'Tiene funci√≥n' : 'Sin funci√≥n'
    });
    
    // Resaltar el link
    link.style.border = "2px solid orange";
    link.style.backgroundColor = "lightyellow";
});

// 3. Verificar la estructura del men√∫ React
console.log("\n3Ô∏è‚É£ Verificando estructura del men√∫...");
// Buscar el componente del men√∫
const menuContainer = document.querySelector('.layout-menu-container, .layout-menu');
if (menuContainer) {
    console.log("‚úÖ Contenedor del men√∫ encontrado:", menuContainer);
    
    // Buscar elementos con texto "Tablero"
    const tableroElements = Array.from(menuContainer.querySelectorAll('*'))
        .filter(el => el.textContent.trim().toLowerCase() === 'tablero');
    
    console.log("Elementos 'Tablero' en el men√∫:", tableroElements.length);
    tableroElements.forEach((el, index) => {
        console.log(`Elemento ${index + 1}:`, {
            tag: el.tagName,
            classes: el.className,
            parent: el.parentElement?.tagName,
            parentClasses: el.parentElement?.className
        });
    });
}

// 4. Crear funci√≥n de navegaci√≥n forzada
console.log("\n4Ô∏è‚É£ Creando funciones de navegaci√≥n...");

window.forceNavigateToTablero = function() {
    console.log("üöÄ Navegaci√≥n forzada al tablero...");
    
    // M√©todo 1: Usar React Router program√°ticamente
    try {
        if (window.ReactRouterDOM && window.ReactRouterDOM.useHistory) {
            console.log("Intentando con React Router...");
            // Esta es una aproximaci√≥n, puede no funcionar en todos los casos
        }
    } catch (e) {
        console.log("React Router no accesible directamente");
    }
    
    // M√©todo 2: Cambiar la URL y forzar re-render
    window.history.pushState({}, '', '/tablero/board');
    window.dispatchEvent(new PopStateEvent('popstate'));
    
    console.log("Nueva URL:", window.location.pathname);
};

window.clickAllTableroLinks = function() {
    console.log("üñ±Ô∏è Haciendo click en todos los links del tablero...");
    const links = document.querySelectorAll('a[href*="tablero"]');
    
    if (links.length === 0) {
        console.log("‚ùå No se encontraron links del tablero");
        return;
    }
    
    links.forEach((link, index) => {
        console.log(`Haciendo click en link ${index + 1}:`, link.href);
        setTimeout(() => {
            link.click();
        }, index * 500); // Esperar 500ms entre clicks
    });
};

// 5. Analizar el estado actual de React Router
console.log("\n5Ô∏è‚É£ Analizando React Router...");
setTimeout(() => {
    console.log("URL despu√©s de cargar:", window.location.href);
    console.log("Pathname:", window.location.pathname);
    
    // Verificar si React Router est√° funcionando
    const routerElements = document.querySelectorAll('[data-reactroot] *');
    const hasRouter = Array.from(routerElements).some(el => 
        el.className && (el.className.includes('router') || el.className.includes('Router'))
    );
    
    if (hasRouter) {
        console.log("‚úÖ React Router parece estar activo");
    } else {
        console.log("‚ö†Ô∏è React Router podr√≠a no estar funcionando correctamente");
    }
}, 1000);

// 6. Instrucciones finales
console.log("\nüìã FUNCIONES DISPONIBLES:");
console.log("========================");
console.log("‚Ä¢ forceNavigateToTablero() - Navegaci√≥n forzada");
console.log("‚Ä¢ clickAllTableroLinks() - Click en todos los links");
console.log("");
console.log("üéØ RECOMENDACI√ìN:");
console.log("1. Primero verifica si hay links resaltados en naranja");
console.log("2. Intenta hacer click manual en el enlace resaltado");
console.log("3. Si no funciona: forceNavigateToTablero()");
console.log("4. Si no funciona: clickAllTableroLinks()");

console.log("===============================================");
console.log("üöÄ Debugging configurado. ¬°Examina los resultados!");
